// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ProgressView component Match Snapshot 1`] = `
<View
  collapsable={false}
  style={
    Object {
      "alignItems": "center",
      "flexDirection": "row",
      "height": 16.428571428571427,
      "justifyContent": "space-between",
      "left": 10,
      "position": "absolute",
      "right": 10,
      "top": 16.428571428571427,
    }
  }
/>
`;

exports[`StoryContainer component Match Snapshot 1`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
  style={
    Object {
      "backgroundColor": "#000000",
      "flex": 1,
    }
  }
>
  <View
    onLayout={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "#000000",
          "flex": 1,
        },
        Object {
          "paddingBottom": 0,
        },
      ]
    }
  >
    <View
      style={
        Object {
          "backgroundColor": "#00000000",
          "flex": 1,
        }
      }
    >
      <View
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <View
          onLayout={[Function]}
          style={
            Object {
              "flex": 1,
            }
          }
        >
          <View
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignSelf": "center",
                    "height": "100%",
                    "paddingBottom": 6,
                    "width": 750,
                  },
                  Object {
                    "height": 1334,
                    "width": 750,
                  },
                ]
              }
            >
              <View
                style={
                  Object {
                    "flex": 1,
                  }
                }
              >
                <Video
                  bufferConfig={
                    Object {
                      "bufferForPlaybackAfterRebufferMs": 1000,
                      "bufferForPlaybackMs": 1000,
                      "minBufferMs": 1000,
                    }
                  }
                  onBuffer={[Function]}
                  onEnd={[Function]}
                  onError={[Function]}
                  onLoad={[Function]}
                  onProgress={[Function]}
                  onSeek={[Function]}
                  paused={true}
                  resizeMode="cover"
                  source={
                    Object {
                      "uri": undefined,
                    }
                  }
                  style={
                    Object {
                      "backgroundColor": "black",
                      "borderBottomLeftRadius": 16,
                      "borderBottomRightRadius": 16,
                      "flex": 1,
                      "overflow": "hidden",
                    }
                  }
                />
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "bottom": 0,
                      "justifyContent": "center",
                      "left": 0,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                >
                  <Text
                    style={
                      Object {
                        "color": "red",
                        "fontSize": 16,
                      }
                    }
                  />
                </View>
                <ActivityIndicator
                  animating={true}
                  color="#575899"
                  pointerEvents="none"
                  size="small"
                  style={
                    Object {
                      "flex": 1,
                      "left": "45%",
                      "position": "absolute",
                      "top": "50%",
                    }
                  }
                />
              </View>
            </View>
          </View>
          <View
            style={
              Array [
                Object {
                  "flex": 1,
                  "flexDirection": "row",
                  "position": "absolute",
                  "width": "100%",
                },
                Object {
                  "opacity": 1,
                },
              ]
            }
          >
            <View
              collapsable={false}
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "height": 16.428571428571427,
                  "justifyContent": "space-between",
                  "left": 10,
                  "position": "absolute",
                  "right": 10,
                  "top": 16.428571428571427,
                }
              }
            />
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTSafeAreaView>
`;

exports[`StoryView component Match Snapshot 1`] = `
<View
  style={
    Array [
      Object {
        "alignSelf": "center",
        "height": "100%",
        "paddingBottom": 6,
        "width": 750,
      },
      Object {
        "height": 1334,
        "width": 750,
      },
    ]
  }
>
  <View
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <Video
      bufferConfig={
        Object {
          "bufferForPlaybackAfterRebufferMs": 1000,
          "bufferForPlaybackMs": 1000,
          "minBufferMs": 1000,
        }
      }
      onBuffer={[Function]}
      onError={[Function]}
      onLoad={[Function]}
      onProgress={[Function]}
      onSeek={[Function]}
      paused={true}
      resizeMode="cover"
      source={
        Object {
          "uri": undefined,
        }
      }
      style={
        Object {
          "backgroundColor": "black",
          "borderBottomLeftRadius": 16,
          "borderBottomRightRadius": 16,
          "flex": 1,
          "overflow": "hidden",
        }
      }
    />
    <View
      style={
        Object {
          "alignItems": "center",
          "bottom": 0,
          "justifyContent": "center",
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
    >
      <Text
        style={
          Object {
            "color": "red",
            "fontSize": 16,
          }
        }
      />
    </View>
    <ActivityIndicator
      animating={true}
      color="#575899"
      pointerEvents="none"
      size="small"
      style={
        Object {
          "flex": 1,
          "left": "45%",
          "position": "absolute",
          "top": "50%",
        }
      }
    />
  </View>
</View>
`;

exports[`StoryView should render Footer component Match Snapshot 1`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
  style={
    Object {
      "backgroundColor": "#000000",
      "flex": 1,
    }
  }
>
  <View
    onLayout={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "#000000",
          "flex": 1,
        },
        Object {
          "paddingBottom": 0,
        },
      ]
    }
  />
</RCTSafeAreaView>
`;
